version: 0.2

phases:
  install:
    commands:
      - echo "Installing Hugo..."
      - |
        HUGO_URL=$(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | grep "browser_download_url.*Linux-64bit.tar.gz" | grep -v "extended" | cut -d '"' -f 4)
        if [[ -z "$HUGO_URL" ]]; then echo "Error: Failed to fetch Hugo download URL" && exit 1; fi
        echo "Downloading Hugo from $HUGO_URL"
        wget -q $HUGO_URL
        ls -l  # Verify that the file exists
        HUGO_TAR=$(ls | grep "Linux-64bit.tar.gz")
        if [[ -z "$HUGO_TAR" ]]; then echo "Error: Hugo tarball not found!" && exit 1; fi
        echo "Extracting $HUGO_TAR"
        tar -xzf $HUGO_TAR
        chmod +x hugo
        mv hugo /usr/local/bin/hugo
        hugo version

  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Initializing Git Repo"
      - git init
      - git remote add origin $FULL_REPO_URL
      - git fetch
      - git checkout -f "$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - echo "Initializing and updating Git submodules..."
      - git submodule sync
      - git submodule update --init --recursive
      - echo "Installing dependencies..."
      - gem install asciidoctor

  build:
    commands:
      - echo "Building Website..."
      - hugo -D -d public
      - echo "Deploying Website to S3..."
      - aws s3 sync public/ s3://${WEB_SITE_BUCKET}/ --delete
      - echo "Invalidating CloudFront Cache..."
      - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRO_ID} --paths "/*"

  post_build:
    commands:
      - echo "Build completed successfully!"
